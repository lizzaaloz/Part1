{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1dCue7ikahGj2h9v_9tVCTs9_fwCXe2AX","timestamp":1731642941997},{"file_id":"1zZbU5QXY3ZEtfsKWHQC-JGRhxn7rwGmd","timestamp":1731382230935}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["ФИО"],"metadata":{"id":"8hJfL9b2l439"}},{"cell_type":"code","source":["Лозицкая Елизавета Никитична"],"metadata":{"id":"wRnqvYOkl6EX"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Дисклеймер"],"metadata":{"id":"weOtPwPQmgpD"}},{"cell_type":"markdown","source":["В данной практике вам необходимо применить все ваши знания по темам:\n","\n","- Функции\n","- Словари\n","- Списки\n","- Множества\n","- Условные конструкции\n","- Запросы\n","\n","и все что было изучено на прошлых практических занятиях\n","\n","В каждом задании кратко описаны функции, которые необходимо реализовать, детали реализации вы должны продумать самостоятельно.\n","\n","# **Дисклеймер 2**\n","\n","В данной практике также учитывается критерий: чистота и читаемость кода"],"metadata":{"id":"LznB3uscmjDa"}},{"cell_type":"code","source":[],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZKTiJgZpOE14","executionInfo":{"status":"ok","timestamp":1731647738388,"user_tz":-300,"elapsed":2456,"user":{"displayName":"Елизавета Лозицкая","userId":"14110672105221511480"}},"outputId":"3bdc66b0-e3e7-45f6-85b6-3af0b30ffbc0"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["letter\n","False\n"]}]},{"cell_type":"markdown","source":["# Задание 0"],"metadata":{"id":"7nSJIqkTvC_C"}},{"cell_type":"markdown","source":["Создайте функцию по нахождению уникальных элементов из двух списков\n","\n","\n","\n","```\n","a = [1, 2, 3, 4]\n","b = [3, 4, 5, 6]\n","```\n","\n"],"metadata":{"id":"exACjTiVvGUe"}},{"cell_type":"code","source":["a = [1, 2, 3, 4]\n","b = [3, 4, 5, 6]\n","\n","unique_for_a = [x for x in a if x not in b]\n","unique_for_b = [x for x in b if x not in a]\n","union = unique_for_a + unique_for_b\n","print(union)"],"metadata":{"id":"V_31CrfGbH7V","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731647061055,"user_tz":-300,"elapsed":308,"user":{"displayName":"Елизавета Лозицкая","userId":"14110672105221511480"}},"outputId":"4c232384-b2be-41a5-e628-27b7ff299a48"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 2, 5, 6]\n"]}]},{"cell_type":"markdown","source":["# Задание 1"],"metadata":{"id":"SVWNlBALpCNo"}},{"cell_type":"markdown","source":["Симулятор виртуального питомца\n","\n","Цель: создать виртуальный симулятор домашних животных, в котором пользователи смогут заводить питомцев и ухаживать за ними.\n","\n","Требования:\n","\n","- Функция для усыновления питомца (имя, тип, возраст).\n","- Функция для того, чтобы покормить питомца, поиграть с ним или уложить его спать.\n","- Функция для отображения состояния питомца (голод, радость, энергия)."],"metadata":{"id":"RcKA-VEqpC7f"}},{"cell_type":"code","source":["type_pet = input('Введите тип питомца: ')\n","age = input('Введите возраст питомца: ')\n","name = input('Придумайте имя питомцу: ')\n","print('Вы можете покормить, поиграть, уложить спать')\n","print('Вы можете узнать состояние питомца')\n","satur = 100\n","happy = 100\n","energy = 100\n","action = ''\n","action = input()\n","if action == 'покормить его' or action == 'кормить' or action == 'покормить':\n","  if satur > 70:\n","    print('Питомец не голодный')\n","  else:\n","    print('Корм не вкусный')\n",""],"metadata":{"id":"hE7mF-HXpJLO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Задание 2"],"metadata":{"id":"qZ7qFQnmssNd"}},{"cell_type":"markdown","source":["Рыцарь и дракон\n","\n","Цель: создать небольшую игру, в которой вам необходимо играть за рыцаря и сразиться с драконом\n","\n","Требования:\n","\n","- Создание персонажа (имя, информация о доспехах, оружии, урон, здоровье)\n","- Управление персонажем и мини сюжет\n","- Создание дракона (Имя, информация о здоровье и уроне)\n","- Боевая система (нанесение и получение урона, урон должен быть случайным в заданном диапазоне)\n","- Реализовать бой между драконом и рыцарем"],"metadata":{"id":"UaccTe7ltNvg"}},{"cell_type":"code","source":[],"metadata":{"id":"LCcxp5Q0srjY"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Задание 3\n"],"metadata":{"id":"N8oFiEXol3e2"}},{"cell_type":"markdown","source":["Цель - создать менеджера команды Pokémon, который позволит пользователям:\n","\n","- Добавлять покемонов в свою команду. (если такого покемона еще нет в команде)\n","- Удалять покемонов из их команды.\n","- Просматривать подробную информацию обо всех покемонах в команде.\n","- Находить покемона по имени.\n","- Устраивать тренировочный бой между двумя покемонами\n","\n","Для данной задачи используйте: https://pokeapi.co/\n"],"metadata":{"id":"9p4WQG_Vl7wB"}},{"cell_type":"code","source":["import requests\n","\n","\n","team = []\n","\n","def add_in_team():\n","  pokemon = input()\n","  if pokemon not in team:\n","    team.append(pokemon)\n","  print('покемон добавлен')\n","\n","\n","def team_remove():\n","  pokemon = input()\n","  if pokemon in team:\n","    team.remove(pokemon)\n","  print('покемон удалён')\n","\n","\n","def name():\n","  pokemon = input()\n","  res_name = requests.get(f\"https://pokeapi.co/api/v2/ability/{pokemon}/\").json()\n","  print(res_name)\n","\n","\n","\n","\n","def gender():\n","  pokemon = input()\n","  res_gender = requests.get(f\"https://pokeapi.co/api/v2/gender/{pokemon}/\").json()\n","  gender = res_gender[\"id\"][\"name\"]\n","  print(res_gender)\n","\n","\n","def growth_rates():\n","  pokemon = input()\n","  res_growth_rates = requests.get(f\"https://pokeapi.co/api/v2/growth-rate/{pokemon}/\").json()\n","  print(res_growth_rates)\n","\n","\n","add_in_team()\n","team_remove()\n","name()\n","gender()\n","growth_rates()\n","\n"],"metadata":{"id":"NnGYp1MTqi5k"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"bDvfmDtkVsAR"},"execution_count":null,"outputs":[]}]}